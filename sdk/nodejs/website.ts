// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Website extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'azure-static-website:index:Website';

    /**
     * Returns true if the given object is an instance of Website.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Website {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Website.__pulumiType;
    }

    /**
     * the CDN URL for the site
     */
    public /*out*/ readonly cdnURL!: pulumi.Output<string | undefined>;
    /**
     * the custom domain URL where the static website can be accessed
     */
    public /*out*/ readonly customDomainURL!: pulumi.Output<string | undefined>;
    /**
     * the Storage URL for the site
     */
    public /*out*/ readonly originURL!: pulumi.Output<string>;
    /**
     * the name of the resource group that was provisioned to contain the needed static website resources
     */
    public /*out*/ readonly resourceGroupName!: pulumi.Output<string>;

    /**
     * Create a Website resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebsiteArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.sitePath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sitePath'");
            }
            resourceInputs["dnsZoneName"] = args ? args.dnsZoneName : undefined;
            resourceInputs["domainResourceGroup"] = args ? args.domainResourceGroup : undefined;
            resourceInputs["errorDocument"] = args ? args.errorDocument : undefined;
            resourceInputs["indexDocument"] = args ? args.indexDocument : undefined;
            resourceInputs["sitePath"] = args ? args.sitePath : undefined;
            resourceInputs["subdomain"] = args ? args.subdomain : undefined;
            resourceInputs["withCDN"] = args ? args.withCDN : undefined;
            resourceInputs["withCustomDomain"] = args ? args.withCustomDomain : undefined;
            resourceInputs["cdnURL"] = undefined /*out*/;
            resourceInputs["customDomainURL"] = undefined /*out*/;
            resourceInputs["originURL"] = undefined /*out*/;
            resourceInputs["resourceGroupName"] = undefined /*out*/;
        } else {
            resourceInputs["cdnURL"] = undefined /*out*/;
            resourceInputs["customDomainURL"] = undefined /*out*/;
            resourceInputs["originURL"] = undefined /*out*/;
            resourceInputs["resourceGroupName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Website.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Website resource.
 */
export interface WebsiteArgs {
    /**
     * The name of the DNS zone.
     */
    dnsZoneName?: pulumi.Input<string>;
    /**
     * The name of the resource group your domain is attached to
     */
    domainResourceGroup?: pulumi.Input<string>;
    /**
     * The default 404 error page
     */
    errorDocument?: pulumi.Input<string>;
    /**
     * The default document for the site. Defaults to index.html
     */
    indexDocument?: pulumi.Input<string>;
    /**
     * The root directory containing the website's contents.
     */
    sitePath: pulumi.Input<string>;
    /**
     * The subdomain used to access the static website. If not specified will configure with apex/root domain of the DNS zone specified.
     */
    subdomain?: pulumi.Input<string>;
    /**
     * Provision CDN to serve content.
     */
    withCDN?: pulumi.Input<boolean>;
    /**
     * Provision a custom domain to serve the site from. This will require a you to set the domainResourceGroup property to the name of the resource group your domain is attached to, as well as the dnsZoneName property for the name of the DNS zone, configured in Azure
     */
    withCustomDomain?: pulumi.Input<boolean>;
}
