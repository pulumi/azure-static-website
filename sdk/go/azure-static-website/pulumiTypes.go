// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurestaticwebsite

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebsiteCDNConfig struct {
	// Whether to restrict traffic to HTTPS only. Defaults to false.
	ContentTypesToCompress []string `pulumi:"contentTypesToCompress"`
	// The custom domain to use for CNAME records. For example, `www.example.com`.
	IsCompressionEnabled *bool `pulumi:"isCompressionEnabled"`
}

type WebsiteDomainConfig struct {
	// The domain name of the website -- e.g., `example.com` in `www.example.com`
	Name string `pulumi:"name"`
	// The name of the Azure resource group containing the DNS zone
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The subdomain name of the website -- e.g., `www` in `www.example.com`
	Subdomain string `pulumi:"subdomain"`
}

// WebsiteDomainConfigInput is an input type that accepts WebsiteDomainConfigArgs and WebsiteDomainConfigOutput values.
// You can construct a concrete instance of `WebsiteDomainConfigInput` via:
//
//          WebsiteDomainConfigArgs{...}
type WebsiteDomainConfigInput interface {
	pulumi.Input

	ToWebsiteDomainConfigOutput() WebsiteDomainConfigOutput
	ToWebsiteDomainConfigOutputWithContext(context.Context) WebsiteDomainConfigOutput
}

type WebsiteDomainConfigArgs struct {
	// The domain name of the website -- e.g., `example.com` in `www.example.com`
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Azure resource group containing the DNS zone
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// The subdomain name of the website -- e.g., `www` in `www.example.com`
	Subdomain pulumi.StringInput `pulumi:"subdomain"`
}

func (WebsiteDomainConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebsiteDomainConfig)(nil)).Elem()
}

func (i WebsiteDomainConfigArgs) ToWebsiteDomainConfigOutput() WebsiteDomainConfigOutput {
	return i.ToWebsiteDomainConfigOutputWithContext(context.Background())
}

func (i WebsiteDomainConfigArgs) ToWebsiteDomainConfigOutputWithContext(ctx context.Context) WebsiteDomainConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteDomainConfigOutput)
}

func (i WebsiteDomainConfigArgs) ToWebsiteDomainConfigPtrOutput() WebsiteDomainConfigPtrOutput {
	return i.ToWebsiteDomainConfigPtrOutputWithContext(context.Background())
}

func (i WebsiteDomainConfigArgs) ToWebsiteDomainConfigPtrOutputWithContext(ctx context.Context) WebsiteDomainConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteDomainConfigOutput).ToWebsiteDomainConfigPtrOutputWithContext(ctx)
}

// WebsiteDomainConfigPtrInput is an input type that accepts WebsiteDomainConfigArgs, WebsiteDomainConfigPtr and WebsiteDomainConfigPtrOutput values.
// You can construct a concrete instance of `WebsiteDomainConfigPtrInput` via:
//
//          WebsiteDomainConfigArgs{...}
//
//  or:
//
//          nil
type WebsiteDomainConfigPtrInput interface {
	pulumi.Input

	ToWebsiteDomainConfigPtrOutput() WebsiteDomainConfigPtrOutput
	ToWebsiteDomainConfigPtrOutputWithContext(context.Context) WebsiteDomainConfigPtrOutput
}

type websiteDomainConfigPtrType WebsiteDomainConfigArgs

func WebsiteDomainConfigPtr(v *WebsiteDomainConfigArgs) WebsiteDomainConfigPtrInput {
	return (*websiteDomainConfigPtrType)(v)
}

func (*websiteDomainConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebsiteDomainConfig)(nil)).Elem()
}

func (i *websiteDomainConfigPtrType) ToWebsiteDomainConfigPtrOutput() WebsiteDomainConfigPtrOutput {
	return i.ToWebsiteDomainConfigPtrOutputWithContext(context.Background())
}

func (i *websiteDomainConfigPtrType) ToWebsiteDomainConfigPtrOutputWithContext(ctx context.Context) WebsiteDomainConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteDomainConfigPtrOutput)
}

type WebsiteDomainConfigOutput struct{ *pulumi.OutputState }

func (WebsiteDomainConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebsiteDomainConfig)(nil)).Elem()
}

func (o WebsiteDomainConfigOutput) ToWebsiteDomainConfigOutput() WebsiteDomainConfigOutput {
	return o
}

func (o WebsiteDomainConfigOutput) ToWebsiteDomainConfigOutputWithContext(ctx context.Context) WebsiteDomainConfigOutput {
	return o
}

func (o WebsiteDomainConfigOutput) ToWebsiteDomainConfigPtrOutput() WebsiteDomainConfigPtrOutput {
	return o.ToWebsiteDomainConfigPtrOutputWithContext(context.Background())
}

func (o WebsiteDomainConfigOutput) ToWebsiteDomainConfigPtrOutputWithContext(ctx context.Context) WebsiteDomainConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebsiteDomainConfig) *WebsiteDomainConfig {
		return &v
	}).(WebsiteDomainConfigPtrOutput)
}

// The domain name of the website -- e.g., `example.com` in `www.example.com`
func (o WebsiteDomainConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebsiteDomainConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the Azure resource group containing the DNS zone
func (o WebsiteDomainConfigOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebsiteDomainConfig) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// The subdomain name of the website -- e.g., `www` in `www.example.com`
func (o WebsiteDomainConfigOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v WebsiteDomainConfig) string { return v.Subdomain }).(pulumi.StringOutput)
}

type WebsiteDomainConfigPtrOutput struct{ *pulumi.OutputState }

func (WebsiteDomainConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebsiteDomainConfig)(nil)).Elem()
}

func (o WebsiteDomainConfigPtrOutput) ToWebsiteDomainConfigPtrOutput() WebsiteDomainConfigPtrOutput {
	return o
}

func (o WebsiteDomainConfigPtrOutput) ToWebsiteDomainConfigPtrOutputWithContext(ctx context.Context) WebsiteDomainConfigPtrOutput {
	return o
}

func (o WebsiteDomainConfigPtrOutput) Elem() WebsiteDomainConfigOutput {
	return o.ApplyT(func(v *WebsiteDomainConfig) WebsiteDomainConfig {
		if v != nil {
			return *v
		}
		var ret WebsiteDomainConfig
		return ret
	}).(WebsiteDomainConfigOutput)
}

// The domain name of the website -- e.g., `example.com` in `www.example.com`
func (o WebsiteDomainConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteDomainConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure resource group containing the DNS zone
func (o WebsiteDomainConfigPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteDomainConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The subdomain name of the website -- e.g., `www` in `www.example.com`
func (o WebsiteDomainConfigPtrOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteDomainConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Subdomain
	}).(pulumi.StringPtrOutput)
}

type WebsiteStorageConfig struct {
	// The custom domain to use for CNAME records. For example, `www.example.com`.
	CustomDomain *string `pulumi:"customDomain"`
	// Whether to restrict traffic to HTTPS only. Defaults to false.
	EnableHttpsTrafficOnly *bool `pulumi:"enableHttpsTrafficOnly"`
}

// WebsiteStorageConfigInput is an input type that accepts WebsiteStorageConfigArgs and WebsiteStorageConfigOutput values.
// You can construct a concrete instance of `WebsiteStorageConfigInput` via:
//
//          WebsiteStorageConfigArgs{...}
type WebsiteStorageConfigInput interface {
	pulumi.Input

	ToWebsiteStorageConfigOutput() WebsiteStorageConfigOutput
	ToWebsiteStorageConfigOutputWithContext(context.Context) WebsiteStorageConfigOutput
}

type WebsiteStorageConfigArgs struct {
	// The custom domain to use for CNAME records. For example, `www.example.com`.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Whether to restrict traffic to HTTPS only. Defaults to false.
	EnableHttpsTrafficOnly pulumi.BoolPtrInput `pulumi:"enableHttpsTrafficOnly"`
}

func (WebsiteStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebsiteStorageConfig)(nil)).Elem()
}

func (i WebsiteStorageConfigArgs) ToWebsiteStorageConfigOutput() WebsiteStorageConfigOutput {
	return i.ToWebsiteStorageConfigOutputWithContext(context.Background())
}

func (i WebsiteStorageConfigArgs) ToWebsiteStorageConfigOutputWithContext(ctx context.Context) WebsiteStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteStorageConfigOutput)
}

func (i WebsiteStorageConfigArgs) ToWebsiteStorageConfigPtrOutput() WebsiteStorageConfigPtrOutput {
	return i.ToWebsiteStorageConfigPtrOutputWithContext(context.Background())
}

func (i WebsiteStorageConfigArgs) ToWebsiteStorageConfigPtrOutputWithContext(ctx context.Context) WebsiteStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteStorageConfigOutput).ToWebsiteStorageConfigPtrOutputWithContext(ctx)
}

// WebsiteStorageConfigPtrInput is an input type that accepts WebsiteStorageConfigArgs, WebsiteStorageConfigPtr and WebsiteStorageConfigPtrOutput values.
// You can construct a concrete instance of `WebsiteStorageConfigPtrInput` via:
//
//          WebsiteStorageConfigArgs{...}
//
//  or:
//
//          nil
type WebsiteStorageConfigPtrInput interface {
	pulumi.Input

	ToWebsiteStorageConfigPtrOutput() WebsiteStorageConfigPtrOutput
	ToWebsiteStorageConfigPtrOutputWithContext(context.Context) WebsiteStorageConfigPtrOutput
}

type websiteStorageConfigPtrType WebsiteStorageConfigArgs

func WebsiteStorageConfigPtr(v *WebsiteStorageConfigArgs) WebsiteStorageConfigPtrInput {
	return (*websiteStorageConfigPtrType)(v)
}

func (*websiteStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebsiteStorageConfig)(nil)).Elem()
}

func (i *websiteStorageConfigPtrType) ToWebsiteStorageConfigPtrOutput() WebsiteStorageConfigPtrOutput {
	return i.ToWebsiteStorageConfigPtrOutputWithContext(context.Background())
}

func (i *websiteStorageConfigPtrType) ToWebsiteStorageConfigPtrOutputWithContext(ctx context.Context) WebsiteStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteStorageConfigPtrOutput)
}

type WebsiteStorageConfigOutput struct{ *pulumi.OutputState }

func (WebsiteStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebsiteStorageConfig)(nil)).Elem()
}

func (o WebsiteStorageConfigOutput) ToWebsiteStorageConfigOutput() WebsiteStorageConfigOutput {
	return o
}

func (o WebsiteStorageConfigOutput) ToWebsiteStorageConfigOutputWithContext(ctx context.Context) WebsiteStorageConfigOutput {
	return o
}

func (o WebsiteStorageConfigOutput) ToWebsiteStorageConfigPtrOutput() WebsiteStorageConfigPtrOutput {
	return o.ToWebsiteStorageConfigPtrOutputWithContext(context.Background())
}

func (o WebsiteStorageConfigOutput) ToWebsiteStorageConfigPtrOutputWithContext(ctx context.Context) WebsiteStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebsiteStorageConfig) *WebsiteStorageConfig {
		return &v
	}).(WebsiteStorageConfigPtrOutput)
}

// The custom domain to use for CNAME records. For example, `www.example.com`.
func (o WebsiteStorageConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebsiteStorageConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Whether to restrict traffic to HTTPS only. Defaults to false.
func (o WebsiteStorageConfigOutput) EnableHttpsTrafficOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebsiteStorageConfig) *bool { return v.EnableHttpsTrafficOnly }).(pulumi.BoolPtrOutput)
}

type WebsiteStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (WebsiteStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebsiteStorageConfig)(nil)).Elem()
}

func (o WebsiteStorageConfigPtrOutput) ToWebsiteStorageConfigPtrOutput() WebsiteStorageConfigPtrOutput {
	return o
}

func (o WebsiteStorageConfigPtrOutput) ToWebsiteStorageConfigPtrOutputWithContext(ctx context.Context) WebsiteStorageConfigPtrOutput {
	return o
}

func (o WebsiteStorageConfigPtrOutput) Elem() WebsiteStorageConfigOutput {
	return o.ApplyT(func(v *WebsiteStorageConfig) WebsiteStorageConfig {
		if v != nil {
			return *v
		}
		var ret WebsiteStorageConfig
		return ret
	}).(WebsiteStorageConfigOutput)
}

// The custom domain to use for CNAME records. For example, `www.example.com`.
func (o WebsiteStorageConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// Whether to restrict traffic to HTTPS only. Defaults to false.
func (o WebsiteStorageConfigPtrOutput) EnableHttpsTrafficOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebsiteStorageConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttpsTrafficOnly
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebsiteDomainConfigInput)(nil)).Elem(), WebsiteDomainConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebsiteDomainConfigPtrInput)(nil)).Elem(), WebsiteDomainConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebsiteStorageConfigInput)(nil)).Elem(), WebsiteStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebsiteStorageConfigPtrInput)(nil)).Elem(), WebsiteStorageConfigArgs{})
	pulumi.RegisterOutputType(WebsiteDomainConfigOutput{})
	pulumi.RegisterOutputType(WebsiteDomainConfigPtrOutput{})
	pulumi.RegisterOutputType(WebsiteStorageConfigOutput{})
	pulumi.RegisterOutputType(WebsiteStorageConfigPtrOutput{})
}
